# This is a basic workflow to help you get started with Actions

name: CI Sample

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: # all branches
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 30, 14 * * * # Run at 2:30 UTC everyday
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        default: dev
      conditional_step:
        description: Run one-line script?
        required: true
        default: false
      test_2_result:
        description: Test result
        required: true
        default: passed
env:
  WORKFLOW_SCOPED_VARIABLE: SampleName-${GITHUB_RUN_NUMBER}
  MAIN_PUSH: ${{github.ref == 'refs/heads/main' && github.event_name == 'push'}}
  SECRETS_CONFIGURED: ${{secrets.CONTAINER_REGISTRY_URL != null}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  hello-world:
    runs-on: ubuntu-latest
    outputs:
      sample_output: ${{ steps.multiline.outputs.test_output }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run a one-line script
        if: github.event.inputs.conditional_step # checking for non-empty, 'false' still runs
        run: echo Hello, world!  Triggered by ${{ github.event_name }}

      - name: Use a secret
        if: github.event.inputs.conditional_step # checking for non-empty, 'false' still runs
        run: echo $SAMPLE_SECRET  Triggered by ${{ github.event_name }}

      - name: Run Test 1
        if: always()
        id: test-1
        run: echo "::set-output name=result::passed\n"        

      - name: Run Test 2
        if: always()
        id: test-2
        run: echo "::set-output name=result::${{ github.event.inputs.test_2_result }}\n"

      - name: Test summary
        if: always()
        id: summary
        run: |
          echo "test-1: ${{ steps.test-1.outputs.result }}"
          echo "test-2: ${{ steps.test-2.outputs.result }}"

      - name: Run a multi-line script
        id: multiline
        run: |
          if [[ "" == "${{ github.event.inputs.environment }}" ]]
          then
              echo "No environment specified"
              echo "::set-output name=test_output::NA"
          else
              echo "Deploying to ${{ github.event.inputs.environment }}"
              echo "::set-output name=test_output::deployment-${{ github.event.inputs.environment }}"
          fi

      - uses: ./.github/actions/hello-action
        with:
          who-to-greet: SampleUser

      - name: Last step diagnostics
        if: always()
        run: |
          pwd
          printenv | sort
          ls -R

  second-job:
    needs: hello-world
    runs-on: ubuntu-latest

    steps:
      - name: Deploy
        id: deploy
        if: env.MAIN_PUSH == 'true'
        run: echo "Merging to main"

      - name: Last step diagnostics
        if: always()
        run: |
          echo "hello_world output: sample_output=${{ needs.hello_world.outputs.sample_output }}"
          pwd
          printenv | sort
          ls -R